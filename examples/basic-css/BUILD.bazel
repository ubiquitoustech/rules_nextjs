load(
    "@ubiquitous_tech_rules_nextjs//nextjs:defs.bzl",
    "nextjs",
    "nextjs_dev",
    # "vite_dev",
)

# load(
#     "@npm//@ubiquitoustech/rules_vite:index.bzl",
#     "vite",
#     "vite_dev",
# )
# load("@npm//history-server:index.bzl", "history_server")

nextjs(
    name = "prod",
    srcs = glob(["pages/**"]) + [
        ":styles.module.css",
        ":package.json",
        ":yarn.lock",
        "next.config.js",
        # ":tsconfig.json",
    ],
    # config = ":vite.config.ts",
    deps = [
        "@npm//next",
        "@npm//react",
        "@npm//react-dom",

        # "@npm//@types/react",
        # "@npm//@types/react-dom",
        # "@npm//@vitejs/plugin-react",
        # "@npm//react",
        # "@npm//react-dom",
        # "@npm//typescript",
        # "@npm//vite",
    ],
)


nextjs_dev(
    name = "dev",
    srcs = glob(["pages/**"]) + [
        ":styles.module.css",
        ":package.json",
        ":yarn.lock",
        ":next.config.js",
        ":.babelrc",
        # ":tsconfig.json",
    ],
    # port = "4000",
    # config = ":vite.config.ts",
    deps = [
        "@npm//next",
        "@npm//react",
        "@npm//react-dom",

        # "@npm//@babel/core",
        # "@npm//webpack",

        # "@npm//next-transpile-modules",

        # "@npm//@types/react",
        # "@npm//@types/react-dom",
        # "@npm//@vitejs/plugin-react",
        # "@npm//react",
        # "@npm//react-dom",
        # "@npm//typescript",
        # "@npm//vite",
    ],
)

# vite_dev(
#     name = "dev",
#     srcs = glob(["src/**"]) + [
#         ":index.html",
#         ":package.json",
#         ":yarn.lock",
#         ":tsconfig.json",
#     ],
#     config = ":vite.config.mjs",
#     npm_managed_directory_name = "npm",
#     npm_managed_directory_path = "node_modules",
#     deps = [
#         "@npm//@types/react",
#         "@npm//@types/react-dom",
#         "@npm//@vitejs/plugin-react",
#         "@npm//react",
#         "@npm//react-dom",
#         "@npm//typescript",
#         "@npm//vite",
#     ],
# )

# PROD_BUNDLE = ":prod"

# history_server(
#     name = "prodserver",
#     data = [PROD_BUNDLE],
#     templated_args = ["-a $$(rlocation $(rootpath %s))" % PROD_BUNDLE],
# )
